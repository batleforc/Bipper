basePath: /api
definitions:
  route.LoginBody:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  route.LoginReturn:
    properties:
      access_token:
        type: string
      pseudo:
        type: string
      renew_token:
        type: string
      role:
        type: string
    type: object
  route.LogoutBody:
    properties:
      renew_token:
        type: string
    type: object
  route.RegisterBody:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      pseudo:
        type: string
      surname:
        type: string
    type: object
  route.RegisterReturn:
    properties:
      error:
        type: boolean
      message:
        type: string
      registered:
        type: boolean
    type: object
  route.RenewTokenBody:
    properties:
      renew_token:
        type: string
    type: object
  route.RenewTokenReturn:
    properties:
      access_token:
        type: string
      pseudo:
        type: string
      role:
        type: string
    type: object
info:
  contact:
    email: maxleriche.60@gmail.com
    name: Batleforc
    url: https://weebo.fr
  description: Bipper api
  title: Bipper Api
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: Login body
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/route.LoginBody'
      responses:
        "200":
          description: Login return
          schema:
            $ref: '#/definitions/route.LoginReturn'
      summary: Login user
      tags:
      - Auth
  /logout:
    post:
      consumes:
      - application/json
      description: Logout user
      parameters:
      - description: Logout body
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/route.LogoutBody'
      responses: {}
      summary: Logout user
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Register User
      parameters:
      - description: Register body
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/route.RegisterBody'
      responses:
        "200":
          description: Register return
          schema:
            $ref: '#/definitions/route.RegisterReturn'
      summary: Register User
      tags:
      - Auth
  /renewtoken:
    post:
      consumes:
      - application/json
      description: Renew Token via refresh token
      parameters:
      - description: Renew body
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/route.RenewTokenBody'
      responses:
        "200":
          description: Renew return
          schema:
            $ref: '#/definitions/route.RenewTokenReturn'
      summary: Renew Token
      tags:
      - Auth
swagger: "2.0"
